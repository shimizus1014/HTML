★ Webアプリケーション開発に必要な知識・技術

ブラウザ←（通信）→Webサーバ←（通信）→データベースサーバ
                       ｜A 訓練前半部の学習｜
                         →Java入門編（ロジック）、データベース（SQL）
  ｜B 訓練後半部の学習｜
          ↑
          ↑          ｜③サーバサイドプログラミング｜
          ↑              →Javaサーバサイド編（含 PHP）
          ↑
☆ Webアプリケーション構築に必要なHTML、CSS、JavaScriptの基礎を学習
                                  ①         ②
                 Webプログラミング（前半）    （後半）

【Webページの基本】
☆ Webサイトの仕組み（World Wide Web：通称「WWW」）
   →世界中に張り巡らされたコンピュータの通信網
          World Wide                      Web
   
   ・コンピュータ同士の通信手段：HTTP(HyperText Transfer Protocol)
 
 (HTTP通信)     URL(Uniform Resource Locator)にて、
                ↓            Webサーバを特定し、Webページを要求
                ↓
  「ブラウザ」--リクエスト→「Webサーバ」
  （Webページ)←レスポンス--(Webページ)
       ↑                        ↑
       ｜                        ｜
       ｜                     ハイパーテキスト
    画面に表示                →リンクを埋め込むことができるドキュメント
  （レンダリング）                    ：ドキュメントに埋め込まれたURL
       ｜
       ｜                     ハイパーテキストに情報を埋め込むためには、
       ｜                     コンピュータが理解できるように
       ｜                     ルールにしたがってWebページを記述する必要がある。
       ｜                       ↑
        ----解釈←------------HyperText Markup Language、通称「HTML」

☆ 静的なWebページ

・ ブラウザがWebサーバにリクエストすると、リクエストされたWebサーバは
   指定されたWebページをブラウザにレスポンスする。
       ↓
   Webサーバには、予めリクエスト時に送信するためのWebページ（HTMLファイル）が
   保存されている必要がある。

☆ 動的なWebページ

・ 検索サイトやショッピングサイトなどでは、ブラウザから入力した検索用語や
   ユーザー名によって、レスポンスされてくるWebページは変化する。
→ 予めWebページを作成して保存しておくことはできない！
→ ブラウザからWebサーバにリクエストが届いた時点で、リクエストに添付された
   データをもとに「プログラム」がWebページを作成する仕組みになっている。
                       ↑                            ↑
                       ｜                 Common Gateway Interface、通称「CGI」
               サーバーサイドプログラム

☆ Webアプリケーション

   →ブラウザの画面を出力先とするアプリケーション
   ・サーバーサイドプログラムは、他のサーバと連携することも可能！
                                (アプリケーションサーバ）

 「ブラウザ」 --リクエスト→「Webサーバ」--検索→「データベースサーバ」
      ↑       (入力データ）（プログラム)←結果--  データベース
  レンダリング←レスポンス--（HTMLデータ）

